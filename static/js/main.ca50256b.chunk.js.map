{"version":3,"sources":["SeasonDisplay.js","ErrorMessage.js","Loader.js","index.js"],"names":["seasonConfig","Summer","text","iconName","Winter","SeasonDisplay","props","lat","month","season","Date","getMonth","className","ErrorMessage","error","Loader","message","defaultProps","App","state","errorMessage","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","err","this","renderContent","React","Component","ReactDOM","render","document","querySelector"],"mappings":"+OAGMA,G,MAAe,CACnBC,OAAQ,CACNC,KAAM,mBACNC,SAAU,OAEZC,OAAQ,CACNF,KAAM,+BACNC,SAAU,eA0BCE,EAdO,SAACC,GACrB,IATiBC,EAAKC,EAShBC,GATWF,EASQD,EAAMC,KATTC,GASc,IAAIE,MAAOC,YARnC,GAAKH,EAAQ,EAChBD,EAAM,EAAI,SAAW,SAErBA,EAAM,EAAI,SAAW,UAIC,EAGJP,EAAaS,GAAhCN,EAHuB,EAGvBA,SAAUD,EAHa,EAGbA,KAElB,OACE,sBAAKU,UAAS,yBAAoBH,GAAlC,UACE,mBAAGG,UAAS,4BAAuBT,EAAvB,WACZ,6BAAKD,IACL,mBAAGU,UAAS,6BAAwBT,EAAxB,eChBHU,G,MAZM,SAACP,GACpB,IAAMQ,EAAQR,EAAMQ,MAEpB,OACE,qBAAKF,UAAU,sCAAf,SACE,qBAAKA,UAAU,+BAAf,SACE,6BAAKE,UCPPC,G,MAAS,SAACT,GACd,OACE,qBAAKM,UAAU,mBAAf,SACE,qBAAKA,UAAU,iBAAf,SAAiCN,EAAMU,cAK7CD,EAAOE,aAAe,CACpBD,QAAS,cAGID,QCPTG,E,4MACJC,MAAQ,CAAEZ,IAAK,KAAMa,aAAc,I,kEAEd,IAAD,OAClBC,OAAOC,UAAUC,YAAYC,oBAC3B,SAACC,GAAD,OAAc,EAAKC,SAAS,CAAEnB,IAAKkB,EAASE,OAAOC,cACnD,SAACC,GAAD,OAAS,EAAKH,SAAS,CAAEN,aAAcS,EAAIb,e,sCAK7C,OAAIc,KAAKX,MAAMC,eAAiBU,KAAKX,MAAMZ,IAClC,cAAC,EAAD,CAAcO,MAAOgB,KAAKX,MAAMC,gBAGpCU,KAAKX,MAAMC,cAAgBU,KAAKX,MAAMZ,IAClC,cAAC,EAAD,CAAeA,IAAKuB,KAAKX,MAAMZ,MAGjC,cAAC,EAAD,CAAQS,QAAQ,yC,+BAIvB,OAAO,8BAAMc,KAAKC,sB,GAvBJC,IAAMC,WA2BxBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,cAAc,Y","file":"static/js/main.ca50256b.chunk.js","sourcesContent":["import React from 'react';\r\nimport './season-display.css';\r\n\r\nconst seasonConfig = {\r\n  Summer: {\r\n    text: 'It is nice sunny',\r\n    iconName: 'sun',\r\n  },\r\n  Winter: {\r\n    text: 'Ahhhhhh, it is freaking cold',\r\n    iconName: 'snowflake',\r\n  },\r\n};\r\n\r\nconst getSeason = (lat, month) => {\r\n  if (month > 2 && month < 9) {\r\n    return lat > 0 ? 'Summer' : 'Winter';\r\n  } else {\r\n    return lat > 0 ? 'Winter' : 'Summer';\r\n  }\r\n};\r\n\r\nconst SeasonDisplay = (props) => {\r\n  const season = getSeason(props.lat, new Date().getMonth());\r\n\r\n  const { iconName, text } = seasonConfig[season];\r\n\r\n  return (\r\n    <div className={`season-display ${season}`}>\r\n      <i className={`icon-left massive ${iconName} icon`} />\r\n      <h1>{text}</h1>\r\n      <i className={`icon-right massive ${iconName} icon`} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SeasonDisplay;\r\n","import React from 'react';\r\nimport './error-message.css';\r\n\r\nconst ErrorMessage = (props) => {\r\n  const error = props.error;\r\n\r\n  return (\r\n    <div className=\"error-container ui negative message\">\r\n      <div className=\"error-message ui red message\">\r\n        <h1>{error}</h1>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import React from 'react';\r\n\r\nconst Loader = (props) => {\r\n  return (\r\n    <div className=\"ui active dimmer\">\r\n      <div className=\"ui text loader\">{props.message}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nLoader.defaultProps = {\r\n  message: 'Loading...',\r\n};\r\n\r\nexport default Loader;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport SeasonDisplay from './SeasonDisplay';\r\nimport ErrorMessage from './ErrorMessage';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport Loader from './Loader';\r\n\r\nclass App extends React.Component {\r\n  state = { lat: null, errorMessage: '' };\r\n\r\n  componentDidMount() {\r\n    window.navigator.geolocation.getCurrentPosition(\r\n      (position) => this.setState({ lat: position.coords.latitude }),\r\n      (err) => this.setState({ errorMessage: err.message })\r\n    );\r\n  }\r\n\r\n  renderContent() {\r\n    if (this.state.errorMessage && !this.state.lat) {\r\n      return <ErrorMessage error={this.state.errorMessage} />;\r\n    }\r\n\r\n    if (!this.state.errorMessage && this.state.lat) {\r\n      return <SeasonDisplay lat={this.state.lat} />;\r\n    }\r\n\r\n    return <Loader message=\"Please accept the location request\" />;\r\n  }\r\n\r\n  render() {\r\n    return <div>{this.renderContent()}</div>;\r\n  }\r\n}\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'));\r\n"],"sourceRoot":""}